<UserControl x:Class="MinskTrans.Universal.ShowStopView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
             xmlns:controls="using:NumberConverter.WinRTXamlToolkit.Controls"
             xmlns:converters="using:MinskTrans.Universal.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:desctopClient="using:MinskTrans.DesctopClient"
             xmlns:local="using:MinskTrans.Universal"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:modelview="using:MinskTrans.DesctopClient.Modelview"
             xmlns:base="using:MinskTrans.Context.Base"
             d:DataContext="{d:DesignInstance modelview:StopModelView}"
             d:DesignHeight="300"
             d:DesignWidth="400"
             mc:Ignorable="d">
    <UserControl.Resources>
        <converters:IntToStringDayOfWeek x:Key="IntToStringDayOfWeekdaysToStrConverter" />
        <!--  d:DataContext="{d:DesignInstance modelview:StopModelView}"  -->
        <converters:TransportToColor x:Key="TransportToColor" />
        <converters:RoutsToNumStrConverter x:Key="RoutsToNumStrConverter" />
        <converters:StopsToStr x:Key="StopsToStr" />
        <converters:TransportToImageConverter x:Key="TransportToImageConverter" />
        <local:MinsLeftFromTimeSpanConverter x:Key="MinsLeftConverter" />
        <local:MinsToTimeFromTimeSpanConverter x:Key="MinsToTimeConverter" />

        <DataTemplate x:Key="DataTemplate1" >
            <Grid x:Name="Grid" Margin="0,5" d:DataContext="{d:DesignInstance base:TimeLineModel}">
                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />


                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />

                </Grid.RowDefinitions>
                <Image Grid.RowSpan="3"
                       Height="{Binding ActualHeight,
                                        ElementName=StackPanel}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       Source="{Binding Rout.Transport,
                                        Converter={StaticResource TransportToImageConverter}}"
                       Stretch="Uniform" />
                <StackPanel Grid.Column="1"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Left">
                    <StackPanel x:Name="StackPanel">
                        <TextBlock Grid.Column="1"
                                   FontSize="28"
                                   Padding="0"
                                   Text="{Binding Rout.RouteNum}" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   FontSize="14"
                                   Foreground="{StaticResource GreyGroundSolidColorBrush}"
                                   Text="{Binding Rout.StartStop.Name}"
                                   TextTrimming="WordEllipsis" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="1"
                                   FontSize="18"
                                   Text="{Binding Rout.DestinationStop.Name}"
                                   TextTrimming="CharacterEllipsis" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="3" HorizontalAlignment="Right">
                    <TextBlock Grid.Column="2"
                               HorizontalAlignment="Right"
                               FontSize="28"
                               Text="{Binding Time,
                                              Converter={StaticResource MinsToTimeConverter}}" />
                    <TextBlock Grid.Row="1"
                               Grid.Column="2"
                               HorizontalAlignment="Right"
                               FontSize="18"
                               Foreground="{Binding Rout.Transport,
                                                    Converter={StaticResource TransportToColor}}"
                               Text="{Binding Time,
                                              Converter={StaticResource MinsLeftConverter}}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <Grid x:Name="ShowStop"
          Grid.Row="1"
          Grid.Column="0"
          Grid.ColumnSpan="2"
          Margin="0,0"
          Visibility="Visible">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />


        </Grid.RowDefinitions>
        <controls:WrapPanel>
            <TextBlock Grid.Column="1"
                       Margin="5,0"
                       FontSize="20"
                       Text="{Binding CurDay,
                                      Converter={StaticResource IntToStringDayOfWeekdaysToStrConverter}}" />
            <TextBlock Margin="5,0"
                       FontSize="20"
                       Text="{Binding FilteredSelectedStop.Name,
                                      UpdateSourceTrigger=PropertyChanged}" />
        </controls:WrapPanel>
        <ListView x:Name="tesstListview"
                  Grid.Row="1"
                  HorizontalContentAlignment="Stretch"
                  ItemTemplate="{StaticResource DataTemplate1}"
                  SelectedItem="{Binding SelectedTimeLineModel, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                  ItemsSource="{Binding TimeSchedule,
                                        UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="MinHeight" Value="0" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <Border x:Name="statusBar"
                Grid.Row="2"
                Margin="-10,0"
                Background="#FF5D5959">
            <controls:WrapPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <AppBarButton x:Name="SoftBackButton"
                              Click="BackButtonClick"
                              Command="{Binding BackCommand}"
                              Icon="Back"
                              IsCompact="True">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="Click">
                            <Core:GoToStateAction />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton Click="AppBarButton_Click"
                              Icon="Add"
                              IsCompact="True">
                    <AppBarButton.Flyout>
                        <Flyout>
                            <Interactivity:Interaction.Behaviors>
                                <Core:DataTriggerBehavior Binding="{Binding Path=Context.Context.Groups.Count,
                                                                            Mode=OneWay,
                                                                            UpdateSourceTrigger=PropertyChanged}"
                                                          ComparisonCondition="LessThan"
                                                          Value="1">
                                    <Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=ListGroups}">
                                        <Core:ChangePropertyAction.Value>
                                            <Visibility>Collapsed</Visibility>
                                        </Core:ChangePropertyAction.Value>
                                    </Core:ChangePropertyAction>
                                    <Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=Button}">
                                        <Core:ChangePropertyAction.Value>
                                            <Visibility>Visible</Visibility>
                                        </Core:ChangePropertyAction.Value>
                                    </Core:ChangePropertyAction>
                                </Core:DataTriggerBehavior>
                                <Core:DataTriggerBehavior Binding="{Binding Path=Context.Context.Groups.Count,
                                                                            Mode=OneWay,
                                                                            UpdateSourceTrigger=PropertyChanged}"
                                                          ComparisonCondition="GreaterThan"
                                                          Value="0">
                                    <Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=ListGroups}">
                                        <Core:ChangePropertyAction.Value>
                                            <Visibility>Visible</Visibility>
                                        </Core:ChangePropertyAction.Value>
                                    </Core:ChangePropertyAction>
                                    <Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=Button}">
                                        <Core:ChangePropertyAction.Value>
                                            <Visibility>Collapsed</Visibility>
                                        </Core:ChangePropertyAction.Value>
                                    </Core:ChangePropertyAction>
                                </Core:DataTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                            <Grid>
                                <StackPanel x:Name="ListGroups" Margin="10,0">
                                    <TextBlock FontSize="15" Text="Выберите группу" />
                                    <ListBox x:Name="GroupsListView"
                                             Background="{x:Null}"
                                             DisplayMemberPath="Name"
                                             FontSize="15"
                                             Foreground="White"
                                             ItemsSource="{Binding Context.Context.Groups}"
                                             SelectedItem="{Binding SelectedGroup,
                                                                    Mode=TwoWay,
                                                                    UpdateSourceTrigger=PropertyChanged}" />
                                    <AppBarButton HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  Click="ButtonBase_OnClick"
                                                  Command="{Binding AddStopToGroup}"
                                                  Icon="Accept"
                                                  IsCompact="True" />
                                </StackPanel>
                                <Button Name="Button"
                                        Click="AddGroupButtonClick"
                                        Content="Add Group"
                                        Visibility="Collapsed">
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="Click" />
                                    </Interactivity:Interaction.Behaviors>
                                </Button>
                            </Grid>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarButton HorizontalAlignment="Center"
                              HorizontalContentAlignment="Left"
                              VerticalContentAlignment="Top"
                              Command="{Binding RefreshTimeSchedule}"
                              Icon="Sync"
                              IsCompact="True" />
                <AppBarToggleButton HorizontalAlignment="Center"
                                    Command="{Binding AddRemoveFavouriteStop}"
                                    CommandParameter="{Binding FilteredSelectedStop}"
                                    Icon="Favorite"
                                    IsChecked="{Binding IsStopFavourite,
                                                        Mode=TwoWay,
                                                        UpdateSourceTrigger=PropertyChanged}"
                                    IsCompact="True" />
                <AppBarButton HorizontalAlignment="Center"
                              Command="{Binding ShowStopMap}"
                              CommandParameter="{Binding FilteredSelectedStop}"
                              DataContext="{Binding}"
                              Icon="Map"
                              IsCompact="True"
                              Label="" />
            </controls:WrapPanel>
        </Border>
        <AppBar Grid.Row="3" IsOpen="False">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!--<TextBlock Text="День недели: " />-->

                <controls:WrapPanel Grid.Row="1" Grid.ColumnSpan="10">
                    <Slider Grid.Row="1"
                            MinWidth="200"
                            Margin="5,0"
                            Maximum="7"
                            Minimum="1"
                            Value="{Binding CurDay,
                                            Mode=TwoWay}" />
                    <CheckBox Grid.Row="1"
                              Grid.Column="1"
                              Margin="5,0"
                              Content="Автоматически"
                              IsChecked="{Binding AutoDay,
                                                  Mode=TwoWay,
                                                  UpdateSourceTrigger=PropertyChanged}" />

                </controls:WrapPanel>
            </Grid>
        </AppBar>
    </Grid>
</UserControl>
