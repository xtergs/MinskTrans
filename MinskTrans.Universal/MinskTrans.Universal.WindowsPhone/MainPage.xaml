<Page 
      xmlns:UI="using:Microsoft.Advertising.Mobile.UI" 
      xmlns:ExpaControl="using:ExpanderViewMaster.ExpaControl" 
      xmlns:Controls="using:NumberConverter.WinRTXamlToolkit.Controls"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:MinskTrans.Universal"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:modelview="using:MinskTrans.DesctopClient.Modelview"
	xmlns:Converters="using:MinskTrans.Universal.Converters"
	xmlns:model="using:MinskTrans.Universal.Model"
	xmlns:modelView="using:MinskTrans.Universal.ModelView"
      xmlns:mapControl="clr-namespace:MapControl;assembly=MapControl.WinRT"
	xmlns:desctopClient="using:MinskTrans.DesctopClient"
	xmlns:mapControl1="using:MapControl" xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Core="using:Microsoft.Xaml.Interactions.Core" xmlns:ExpanderControl="using:ExpanderControl" x:Name="mainPage"
	x:Class="MinskTrans.Universal.MainPage"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance modelView:MainModelView}"
	Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Loaded="Page_Loaded" Unloaded="Page_Unloaded">
    <Page.Resources>

        <ExpanderControl:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Converters:WeekdaysToStrConverter x:Key="WeekdaysToStrConverter"/>

        <Converters:IntToVisibleConverter x:Key="IntToVisibleConverter"/>
        <Converters:RoutsToNumStrConverter x:Key="RoutsToNumStrConverter"/>
        <Converters:StopsToStr x:Key="StopsToStr"/>
        <Converters:TransportToImageConverter x:Key="TransportToImageConverter"/>
        <local:MinsLeftConverter x:Key="MinsLeftConverter"/>
        <local:MinsToTimeConverter x:Key="MinsToTimeConverter"/>

        <Style x:Key="FullListViewItem"  TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="MinHeight" Value="0"/>
        </Style>
        <Style x:Key="PushpinItemStyle" TargetType="mapControl1:MapItem">
            <Setter Property="mapControl1:MapPanel.Location" Value="{Binding Location}"/>
            
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="mapControl1:MapItem">
                        <mapControl1:Pushpin Content="{Binding Name}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>
        <Style x:Key="PushpinStyle1" TargetType="mapControl1:Pushpin">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="mapControl1:Pushpin">
                        <Grid x:Name="MainGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Rectangle">
                                <Rectangle.Fill>
                                    <SolidColorBrush x:Name="SolidColorBrush" Color="White" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Path x:Name="Path" Data="M0,-0.5L0,16 16,-0.5" Grid.Row="1">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="SolidColorBrush1" Color="White" />
                                </Path.Fill>
                            </Path>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
								Content="{TemplateBinding Content}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="ListStopsDataTemplate">
            <Grid Margin="0,2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.ColumnSpan="10" 
					Text="{Binding Name}"
					FontSize="15"/>
                <TextBlock Grid.ColumnSpan="10" 
					Grid.Row="1"
					TextWrapping="WrapWholeWords"
						   Foreground="{ThemeResource GreyGroundSolidColorBrush}"
					Text="{Binding DirectionsString, Converter={StaticResource StopsToStr}}"
					MaxLines="2"/>
                <!--<ListView Grid.Row="2"
						  Grid.ColumnSpan="9"
						  ItemsSource="{Binding Source=GroupedTypeRoutsView}">
					<ListView.ItemsPanel>
						<ItemsPanelTemplate>
							<Controls:WrapPanel>
							</Controls:WrapPanel>
						</ItemsPanelTemplate>
					</ListView.ItemsPanel>
					<ListView.GroupStyle>
						<GroupStyle>
							<GroupStyle.HeaderTemplate>
								<DataTemplate>
									<Image Source="{Binding Key, Converter={StaticResource TransportToImageConverter}}"></Image>
								</DataTemplate>
							</GroupStyle.HeaderTemplate>
						</GroupStyle>
					</ListView.GroupStyle>
				</ListView>-->
                <Controls:WrapPanel Grid.Row="2" Grid.ColumnSpan="9" HorizontalAlignment="Stretch" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    <Grid HorizontalAlignment="Left"
						Visibility="{Binding TrolRoutsNum.Count, Converter={StaticResource IntToVisibleConverter}}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="Image/trol.jpg"
							Height="{Binding ActualHeight, ElementName=TextBlock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							Grid.Column="0"
							MinWidth="10" MinHeight="10"/>
                        <TextBlock x:Name="TextBlock"
							Grid.Column="1"
							Foreground="{ThemeResource BlueSolidColorBrush}"
							FontSize="15"
							Text="{Binding TrolRoutsNum, Converter={StaticResource RoutsToNumStrConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="3,0,0,0"/>
                    </Grid>
                    <Grid HorizontalAlignment="Left" 
						Visibility="{Binding BusRoutsNum.Count, Converter={StaticResource IntToVisibleConverter}}" Margin="2,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="Image/bus.jpg"
							Height="{Binding ActualHeight, ElementName=TextBlock1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							Grid.Column="0"
							MinWidth="10" MinHeight="10"/>
                        <TextBlock x:Name="TextBlock1"
							Grid.Column="1"
							Foreground="{ThemeResource GreenSolidColorBrush}"    
							FontSize="15"
							Text="{Binding BusRoutsNum, Converter={StaticResource RoutsToNumStrConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="3,0,0,0"/>
                    </Grid>
                    <Grid HorizontalAlignment="Left" 
						Visibility="{Binding TramRoutsNum.Count, Converter={StaticResource IntToVisibleConverter}}" Margin="2,0,0,0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="Image/tram.jpg"
							   
							Height="{Binding ActualHeight, ElementName=TextBlock2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="10" MinHeight="10"/>
                        <TextBlock x:Name="TextBlock2"
							Grid.Column="1"
							Foreground="{ThemeResource RedSolidColorBrush}"
							FontSize="15"
							Text="{Binding TramRoutsNum, Converter={StaticResource RoutsToNumStrConverter}}" Margin="3,0,0,0"/>
                    </Grid>
                    <Grid HorizontalAlignment="Left" 
						Visibility="{Binding MetroRoutsNum.Count, Converter={StaticResource IntToVisibleConverter}}" Margin="2,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="Image/subway.jpg"
							Height="{Binding ActualHeight, ElementName=TextBlock3, UpdateSourceTrigger=PropertyChanged}"
							Grid.Column="0" MinWidth="10" MinHeight="10"/>
                        <TextBlock x:Name="TextBlock3"
							Grid.Column="1"
							Foreground="{ThemeResource VioletSolidColorBrush}"
							FontSize="15"
							Text="{Binding MetroRoutsNum, Converter={StaticResource RoutsToNumStrConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    </Grid>
                </Controls:WrapPanel>

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="DataTemplate2"
					  >
            <Grid Margin="0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Image MinHeight="15" Source="{Binding Rout.Transport, Converter={StaticResource TransportToImageConverter}}"
					Height="{Binding ActualHeight, ElementName=RouteNumTextBlock}" VerticalAlignment="Top"/>
                <TextBlock Text="{Binding Rout.RouteNum}"
					Grid.Column="1"
					FontSize="35"
					x:Name="RouteNumTextBlock" VerticalAlignment="Top" Margin="5,0,0,0"/>
                <ListBox BorderThickness="0"  IsEnabled="False" Grid.Column="2" ItemsSource="{Binding Destinations}" Padding="0" Background="#00000000">
                    <ListBox.ItemTemplate>
                        <DataTemplate>

                            <TextBlock MinHeight="0" Text="{Binding ''}" Margin="0,-10" Padding="0"
								MaxLines="1"
								TextTrimming="CharacterEllipsis"
								FontSize="15" Foreground="White"/>

                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style  TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="MinHeight" Value="0"/>
                        </Style>
                    </ListBox.ItemContainerStyle>


                </ListBox>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplate3">
            <StackPanel>
                <TextBlock FontSize="15" Text="{Binding RouteName}"/>
                <TextBlock FontSize="15" Text="{Binding Weekdays, Converter={StaticResource WeekdaysToStrConverter}}"/>
            </StackPanel>
        </DataTemplate>


    </Page.Resources>

    <Grid x:Name="GgGrid">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.2" To="StopsVisualState">
                        <VisualTransition.GeneratedEasingFunction>
                            <ElasticEase EasingMode="EaseInOut"/>
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="StopsVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FindHyperButtonGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowStopsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowStop">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="StopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="RoutsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowRoutsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowStopVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FindHyperButtonGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowStopsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowStop">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="TransportListVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="StopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="RoutsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowStopsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FindHyperButtonGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowRoutsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="RoutsListVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowRoutsListGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RoutsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FindTrans">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="StopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="RoutsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowStopsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FindHyperButtonGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowRoutsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowRoutsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowRoutVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowRoutsListGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RoutsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FindTrans">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="StopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="RoutsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowStopsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FindHyperButtonGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RoutViews">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="FavouriteVisualStateGroup">
                <VisualState x:Name="FavouriteStopsVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="FavouriteStopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="FavouriteRoutssHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FavouriteStopsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="FavouriteShowStopVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FavouriteStopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FavouriteRoutssHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FavouriteStopsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowFavouriteStop">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="FavouriteRoutsVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="FavouriteStopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="FavouriteRoutssHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowFavouriteStopsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowFavouriteRoutsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="FavouriteRoutsListVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="FavouriteStopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="FavouriteRoutssHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowFavouriteStopsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowFavouriteRoutsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FavouriteRoutsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowFavouriteRoutsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="FavouriteShowRoutVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="FavouriteStopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="FavouriteRoutssHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>False</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowFavouriteStopsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowFavouriteRoutsGrid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FavouriteRoutsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ShowFavouriteRoutsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RoutViews1">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FavouriteStopsHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FavouriteRoutssHyperlinkButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="GroupsVisualStateGroup">
                <VisualState x:Name="ListGroupsVisualState"/>
                <VisualState x:Name="ShowGroupVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="GroupsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="showStopView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RefreshCurGroupShow">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AddGroupAppBarButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectToDeleteVisualState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ListBox.SelectionMode)" Storyboard.TargetName="GroupsListView">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <SelectionMode>Extended</SelectionMode>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="appBarButton">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Pivot x:Name="Pivot" Margin="0,27,0,0" Padding="0"
		   
			Background="{ThemeResource BackGroundSolidColorBrush}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">

            <PivotItem Header="Поиск"
				x:Name="SearchPivotItem"
				DataContext="{Binding FindModelView}" BorderThickness="0,10,0,0" Margin="0" Padding="0"
				BorderBrush="{StaticResource LightBlueSolidColorBrush}">
                <Border BorderThickness="0,3,0,0" BorderBrush="{StaticResource LightBlueSolidColorBrush}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>



                        <Grid x:Name="FindHyperButtonGrid" Margin="10,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <HyperlinkButton x:Uid="StopsButton"  Content="Остановки" 
								IsEnabled="False"
								x:Name="StopsHyperlinkButton"
								>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="Click">
                                        <Core:GoToStateAction StateName="StopsVisualState"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </HyperlinkButton>
                            <HyperlinkButton Grid.Column="1"
								Content="Транспорт"
								x:Name="RoutsHyperlinkButton" RequestedTheme="Dark"
								>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="Click">
                                        <Core:GoToStateAction StateName="TransportListVisualState"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </HyperlinkButton>
                        </Grid>


                        <Grid Grid.Row="1"
							Grid.ColumnSpan="2"
							x:Name="ShowStopsGrid" Margin="10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>


                            <local:MyTextBox Grid.Row="0" 
								Visibility="Visible"
								x:Name="FindStop" 
								Text="{Binding StopModelView.StopNameFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  InputScope="Search" IsTextPredictionEnabled="False" />
                            <ListView Grid.Row="1" 
								x:Name="StopsListView"
								ItemsSource="{Binding FilteredStops, UpdateSourceTrigger=PropertyChanged}"
								DataContext="{Binding StopModelView}"
								SelectedItem="{Binding FilteredSelectedStop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Grid.ColumnSpan="2" 
								ItemTemplate="{StaticResource ListStopsDataTemplate}" IsSynchronizedWithCurrentItem="False">
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                                        <Core:GoToStateAction StateName="ShowStopVisualState"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>

                        </Grid>

                        <local:ShowStopView x:Name="ShowStop" 
							DataContext="{Binding StopModelView}"
							Visibility="Collapsed"
                                            ShowStatusBar="Visible"
							Grid.Row="0"
							Grid.RowSpan="2"
							Grid.ColumnSpan="2"
							Grid.Column="0"/>

                        <Grid Grid.Row="1"
							Grid.ColumnSpan="2"
							Visibility="Collapsed"
							x:Name="ShowRoutsGrid" Margin="10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <local:MyTextBox Grid.Row="0" 
								x:Name="FindTrans" 
								Text="{Binding RoutsModelView.RoutNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" InputScope="Number"/>

                            <ListView Grid.Row="1" 
								x:Name="RoutsListView"
								ItemsSource="{Binding RouteNums, UpdateSourceTrigger=PropertyChanged}"
								DataContext="{Binding RoutsModelView}"
								SelectedItem="{Binding RouteNumSelectedValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Grid.ColumnSpan="2" 
								ItemTemplate="{StaticResource DataTemplate2}"
								>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                                        <Core:GoToStateAction StateName="RoutsListVisualState"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </ListView>
                            <Grid Grid.Row="1"
								Grid.ColumnSpan="2"
								Visibility="Collapsed"
								DataContext="{Binding RoutsModelView}"
								x:Name="ShowRoutsListGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image MinHeight="15" MinWidth="15" Source="{Binding RouteNumSelectedValue.Rout.Transport, Converter={StaticResource TransportToImageConverter}}"
										Height="{Binding ActualHeight, ElementName=TransportTextBlock, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock FontSize="20" x:Name="TransportTextBlock" Grid.Column="1" Text="{Binding RouteNumSelectedValue.Rout.RouteNum}"/>
                                </Grid>
                                <ListView Grid.Row="1" 
							  
									x:Name="ShowRoutsListView"
									ItemsSource="{Binding RouteNames, UpdateSourceTrigger=PropertyChanged}"
						  
									SelectedItem="{Binding RouteSelectedValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									Grid.ColumnSpan="2" 
									ItemTemplate="{StaticResource DataTemplate3}"
									>
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="SelectionChanged">
                                            <Core:GoToStateAction StateName="ShowRoutVisualState"/>
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>
                                </ListView>
                            </Grid>
                        </Grid>
                        <Grid x:Name="RoutViews" Visibility="Collapsed"
							  DataContext="{Binding RoutsModelView}"
		   
			Grid.Row="0" Margin="10,0" Grid.RowSpan="3" Grid.ColumnSpan="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="1" Margin="0,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>

                                </Grid.ColumnDefinitions>
                                <Image MinHeight="15" Source="{Binding RouteSelectedValue.Transport, Converter={StaticResource TransportToImageConverter}, UpdateSourceTrigger=PropertyChanged}"
					Height="{Binding ActualHeight, ElementName=RouteNameTextBlock}"/>
                                <TextBlock Grid.Column="1"
					Text="{Binding RouteSelectedValue.RouteNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					FontSize="25" Margin="5,0,0,0"/>
                                <TextBlock Grid.Column="2"
					Text="{Binding RouteSelectedValue.RouteName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					x:Name="RouteNameTextBlock"
					FontSize="25" Margin="5,0,0,0"/>
                            </Grid>
                            <ListView Grid.Row="2"
				ItemsSource="{Binding TimesObservableCollection, UpdateSourceTrigger=PropertyChanged}"
				ItemContainerStyle="{StaticResource FullListViewItem}">

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <ToggleButton x:Name="ToggleButton"  
								FontSize="17"
								Style="{ThemeResource ToggleButtonStyle1}"
								Content="{Binding Key.Name}"
								HorizontalAlignment="Stretch"/>
                                            <ListView Grid.Row="1" 
								Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ToggleButton}" 
								ItemsSource="{Binding Value}">
                                                <ListView.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <Controls:WrapPanel/>
                                                    </ItemsPanelTemplate>
                                                </ListView.ItemsPanel>
                                                <ListView.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid
											Margin="5,0">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Text="{Binding DaysStr}"
												FontSize="15"/>
                                                            <TextBlock Grid.Row="1"
												FontSize="13"
												Text="{Binding ToStrTable}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                            </ListView>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <Border Grid.Row="3" Background="#FF5D5959" Margin="-10,0" VerticalAlignment="Bottom">
                                <Controls:WrapPanel HorizontalAlignment="Center" Orientation="Horizontal" >
                                    <AppBarToggleButton IsChecked="{Binding IsRoutFavourite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Context.AddRemoveFavouriteRout}" CommandParameter="{Binding RouteNumSelectedValue}" HorizontalAlignment="Center" Icon="Favorite" IsCompact="True"/>
                                    <AppBarButton HorizontalAlignment="Center" Icon="Map" Label="" Command="{Binding Context.ShowRouteMap}" CommandParameter="{Binding RouteNumSelectedValue.Rout}" IsCompact="True"/>
                                </Controls:WrapPanel>
                            </Border>
                        </Grid>


                    </Grid>
                </Border>

            </PivotItem>
            <PivotItem Header="Избранное" 
				x:Name ="FavourPivotItem"
				Padding="0" Margin="0"
				DataContext="{Binding FavouriteModelView}"
				BorderBrush="{ThemeResource LightBlueSolidColorBrush}">
                <Border BorderThickness="0,3,0,0" BorderBrush="{StaticResource LightBlueSolidColorBrush}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <HyperlinkButton Content="Остановки"
							IsEnabled="False"
							x:Name="FavouriteStopsHyperlinkButton"
							 Margin="10,0,0,0">
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Click">
                                    <Core:GoToStateAction StateName="FavouriteStopsVisualState"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </HyperlinkButton>
                        <HyperlinkButton Grid.Column="1"
							x:Name="FavouriteRoutssHyperlinkButton"
							Content="Транспорт"
							 Margin="0,0,10,0">
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Click">
                                    <Core:GoToStateAction StateName="FavouriteRoutsVisualState"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </HyperlinkButton>
                        <Grid Grid.Row="1"
							Grid.ColumnSpan="2"
							x:Name="ShowFavouriteStopsGrid" Margin="10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ListView x:Name="FavouriteStopsListView" ItemsSource="{Binding Context.FavouriteStops}"
								DataContext="{Binding StopModelView}"
								SelectedItem="{Binding FilteredSelectedStop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Grid.Row="1"
								Grid.ColumnSpan="2" 
								ItemTemplate="{StaticResource ListStopsDataTemplate}" 
								 Margin="10,0">
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                                        <Core:GoToStateAction StateName="FavouriteShowStopVisualState"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>

                            <local:ShowStopView x:Name="ShowFavouriteStop"
								DataContext="{Binding StopModelView}"
								Visibility="Collapsed"
								Grid.Row="1"
								Grid.Column="0"
								Grid.ColumnSpan="2"/>
                        </Grid>
                        <Grid Grid.Row="1"
							Grid.ColumnSpan="2"
							Visibility="Collapsed"
							x:Name="ShowFavouriteRoutsGrid" Margin="10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <ListView Grid.Row="1" 
								x:Name="FavouriteRoutsListView"
								ItemsSource="{Binding Context.FavouriteRouts, UpdateSourceTrigger=PropertyChanged}"
								DataContext="{Binding RoutsModelView}"
								SelectedItem="{Binding RouteNumSelectedValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								Grid.ColumnSpan="2" 
								ItemTemplate="{StaticResource DataTemplate2}"
								>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                                        <Core:GoToStateAction StateName="FavouriteRoutsListVisualState"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </ListView>
                            <ListView Grid.Row="1" 
								Visibility="Collapsed"
								x:Name="ShowFavouriteRoutsListView"
								ItemsSource="{Binding RouteNames, UpdateSourceTrigger=PropertyChanged}"
								DataContext="{Binding RoutsModelView}"
								SelectedItem="{Binding RouteSelectedValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									  ItemTemplate="{StaticResource DataTemplate3}"
								Grid.ColumnSpan="2" 
						  
								>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                                        <Core:GoToStateAction StateName="FavouriteShowRoutVisualState"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </ListView>
                            <Grid x:Name="RoutViews1" Visibility="Collapsed"
								DataContext="{Binding RoutsModelView}"
		   
								Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="3" Height="549" Width="380">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="1" Margin="0,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>

                                    </Grid.ColumnDefinitions>
                                    <Image MinHeight="15" Source="{Binding RouteSelectedValue.Transport, Converter={StaticResource TransportToImageConverter}, UpdateSourceTrigger=PropertyChanged}"
										Height="{Binding ActualHeight, ElementName=RouteNameTextBlock}"/>
                                    <TextBlock Grid.Column="1"
										Text="{Binding RouteSelectedValue.RouteNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										FontSize="25" Margin="5,0,0,0"/>
                                    <TextBlock Grid.Column="2"
										Text="{Binding RouteSelectedValue.RouteName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										x:Name="RouteNameTextBlock1"
										FontSize="25" Margin="5,0,0,0"/>
                                </Grid>
                                <ListView Grid.Row="2"
									ItemsSource="{Binding TimesObservableCollection, UpdateSourceTrigger=PropertyChanged}"
									ItemContainerStyle="{StaticResource FullListViewItem}">

                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <ToggleButton x:Name="ToggleButton"  
													FontSize="17"
													Style="{ThemeResource ToggleButtonStyle1}"
													Content="{Binding Key.Name}"
													HorizontalAlignment="Stretch"/>
                                                <ListView Grid.Row="1" 
													Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ToggleButton}" 
													ItemsSource="{Binding Value}">
                                                    <ListView.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <Controls:WrapPanel/>
                                                        </ItemsPanelTemplate>
                                                    </ListView.ItemsPanel>
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid
																Margin="5,0">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>
                                                                <TextBlock Text="{Binding DaysStr}"
																	FontSize="15"/>
                                                                <TextBlock Grid.Row="1"
																	FontSize="13"
																	Text="{Binding ToStrTable}"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                <Border Grid.Row="3" Background="#FF5D5959" Margin="-10,0" VerticalAlignment="Bottom">
                                    <Controls:WrapPanel HorizontalAlignment="Center" Orientation="Horizontal" >
                                        <AppBarToggleButton IsChecked="{Binding IsRoutFavourite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding Context.AddRemoveFavouriteRout}" CommandParameter="{Binding RouteNumSelectedValue}" HorizontalAlignment="Center" Icon="Favorite" IsCompact="True"/>
                                        <AppBarButton HorizontalAlignment="Center" Icon="Map" Label="" Command="{Binding Context.ShowRouteMap}" CommandParameter="{Binding RouteNumSelectedValue.Rout}" IsCompact="True"/>
                                    </Controls:WrapPanel>
                                </Border>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>

            </PivotItem>
            <PivotItem Name="GroupsPivtoItem"  BorderBrush="{StaticResource LightBlueSolidColorBrush}" Header="Группы" Margin="0" Padding="0"
                       DataContext="{Binding GroupStopsModelView}">

                <Border BorderThickness="0,3,0,0" BorderBrush="{StaticResource LightBlueSolidColorBrush}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ListBox FontSize="18" SelectionChanged="GroupSelectedListView" Name="GroupsListView" DisplayMemberPath="Name" SelectedItem="{Binding SelectedGroupStop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Context.Groups, UpdateSourceTrigger=PropertyChanged}" IsDoubleTapEnabled="False" Background="{x:Null}" Foreground="White"  >
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Holding">
                                    <Core:GoToStateAction StateName="SelectToDeleteVisualState"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                            <!--<Interactivity:Interaction.Behaviors>
                        		<Core:EventTriggerBehavior EventName="SelectionChanged">
                        			<Core:GoToStateAction StateName="ShowGroupVisualState"/>
                        		</Core:EventTriggerBehavior>
                        	</Interactivity:Interaction.Behaviors>-->


                        </ListBox>
                        <!--<ListView DataContext="{Binding ElementName=GroupsListView, Path=SelectedItem}" DisplayMemberPath="Stops" Visibility="Collapsed"/>-->
                        <local:ShowStopView ShowStatusBar="Collapsed" x:Name="showStopView" DataContext="{Binding}" Visibility="Collapsed"></local:ShowStopView>
                        <Border Grid.Row="1" Background="#FF5D5959" Margin="-10,0" VerticalAlignment="Bottom">
                            <Controls:WrapPanel HorizontalAlignment="Center" Orientation="Horizontal" >
                                <AppBarButton x:Name="RefreshCurGroupShow" Visibility="Collapsed" Command="{Binding RefreshTimeSchedule}" IsCompact="True" Icon="Sync" />
                                <AppBarButton x:Name="AddGroupAppBarButton"  HorizontalAlignment="Center" Icon="Add" IsCompact="True" Click="AppBarButton_Click">
                                    <AppBarButton.Flyout>
                                        <Flyout Placement="Bottom">
                                            <StackPanel>
                                                <TextBlock FontSize="18" Text="Название группы"/>
                                                <local:MyTextBox Name="NameTextBox"/>
                                                <Button Content="Добавить" Command="{Binding Context.CreateGroup}" CommandParameter="{Binding ElementName=NameTextBox, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></Button>
                                            </StackPanel>
                                        </Flyout>
                                    </AppBarButton.Flyout>
                                </AppBarButton>
                                <AppBarButton x:Name="appBarButton" Command="{Binding Context.DeleteGroups}" CommandParameter="{Binding SelectedGroupStop, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Icon="Delete" Label=""  IsCompact="True" Visibility="Collapsed"/>
                            </Controls:WrapPanel>
                        </Border>
                    </Grid>
                </Border>
            </PivotItem>

            <PivotItem Header="Карта" 
					   DataContext="{Binding MapModelView}"
				x:Name ="MapPivotItem"
				Padding="0" Margin="0"
				  
				BorderBrush="{StaticResource LightBlueSolidColorBrush}">
                <Border BorderThickness="0,3,0,0" BorderBrush="{StaticResource LightBlueSolidColorBrush}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <mapControl1:Map DoubleTapped="ZoomIn" ViewportChanged="map_ViewportChanged" x:Name="map" ZoomLevel="19" Location="{Binding Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TileGridChanged="map_TileGridChanged">
                          
                        </mapControl1:Map>
                        <Border Grid.Row="1" Background="#FF5D5959" Margin="-10,0" VerticalAlignment="Bottom">
                            <Controls:WrapPanel HorizontalAlignment="Center" Orientation="Horizontal" >
                                <AppBarButton IsCompact="True" Click="AppBarButton_Click_1">
                                    <AppBarButton.Icon>
                                        <FontIcon Glyph="Я" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                                <AppBarButton Visibility="Collapsed" Name="ShowAllPushPins"  IsCompact="True" Click="ButtonBase_OnClick" Icon="ViewAll" />
                            </Controls:WrapPanel>
                        </Border>
                    </Grid>
                </Border>
            </PivotItem>


            <PivotItem Header="Настройки" 
				x:Name ="SettingsPivotItem"
				Padding="0" Margin="0"
				DataContext="{Binding SettingsModelView}"
				BorderBrush="{StaticResource LightBlueSolidColorBrush}">
                <Border BorderThickness="0,3,0,0" BorderBrush="{StaticResource LightBlueSolidColorBrush}">
                    <StackPanel>
                        <Button Content="Обновить расписание" Command="{Binding Context.UpdateDataCommand}"/>
                        <ToggleSwitch OnContent="Использовать WiFi"
							OffContent="Не использовать WiFi"
							IsOn="{Binding UpdateOnWiFi, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <ToggleSwitch OnContent="Использовать мобильное соединение"
							OffContent="Не использовать мобильное соединение"
							IsOn="{Binding UpdateOnMobileData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="Дата обновления расписания"/>
                        <TextBlock Text="{Binding Context.LastUpdateDataDateTime, UpdateSourceTrigger=PropertyChanged}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>

                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Взгляд в прошлое "/>
                            <TextBlock Grid.Column="1" Text="{Binding TimeInPast, Mode=OneWay, UpdateSourceTrigger=Default}"></TextBlock>
                            <TextBlock Grid.Column="2" Text=" мин"/>

                        </Grid>
                        <Slider Value="{Binding TimeInPast, Mode=TwoWay, UpdateSourceTrigger=Default}" IsThumbToolTipEnabled="True"/>
                        <Button Content="Оставить отзыв" Click="ShowInStore" ></Button>
                        <Button Name="ChatWithDeveloper" Content="Связь с разработчиком" Click="StartEmailToDeveloper"/>
                        <Button Click="Test" Visibility="Collapsed" ></Button>
                        
                    </StackPanel>
                </Border>
            </PivotItem>

            <!--<PivotItem Header="Избранное">
			<Grid>


			</Grid>
		</PivotItem>-->
            <!--<PivotItem Header="Debug" Visibility="Collapsed" >
				<Grid Loaded="Grid_Loaded">
					<Button Content="Button" HorizontalAlignment="Left" Margin="98,72,0,0" VerticalAlignment="Top" Click="Button_Click"/>
					<Button Content="Button" HorizontalAlignment="Left" Margin="98,128,0,0" VerticalAlignment="Top" Click="Button_Click_1"/>
					<ListBox x:Name="listBox" HorizontalAlignment="Left" Height="134" Margin="10,228,0,0" VerticalAlignment="Top" Width="380"/>
					<Button Content="Button" HorizontalAlignment="Left" Margin="252,176,0,0" VerticalAlignment="Top" Click="Button_Click_2"/>
					<ListBox x:Name="listview" ItemsSource="{Binding Context.Routs, UpdateSourceTrigger=PropertyChanged}"
						DisplayMemberPath="RouteName"
						HorizontalAlignment="Left" Height="263" Margin="10,367,0,0" VerticalAlignment="Top" Width="380"/>

				</Grid>
			</PivotItem>-->
        </Pivot>



        <ProgressBar x:Name="ProgressBar"  IsEnabled="True" IsIndeterminate="True" Height="10" VerticalAlignment="Top" Visibility="Collapsed"/>

    </Grid>
</Page>