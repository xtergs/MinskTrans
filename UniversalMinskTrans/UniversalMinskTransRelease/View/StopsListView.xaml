<UserControl x:Class="UniversalMinskTransRelease.View.StopsListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Converters="using:MinskTrans.Universal.Converters"
             xmlns:ExpanderControl="using:ExpanderControl"
             xmlns:core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
             xmlns:local="using:UniversalMinskTransRelease.View"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:modelView="using:UniversalMinskTransRelease.ModelView"
             xmlns:modelview="using:MinskTrans.DesctopClient.Modelview"
             xmlns:system="using:System"
             xmlns:templateSelectors="using:UniversalMinskTransRelease.TemplateSelectors"
             xmlns:universal="using:MinskTrans.Universal"
             xmlns:viewModel="using:UniversalMinskTransRelease.ViewModel"
             d:DataContext="{d:DesignInstance modelView:StopModelViewUIDispatcher}"
             d:DesignHeight="300"
             d:DesignWidth="400"
             mc:Ignorable="d">

    <UserControl.Resources>
        <DataTemplate x:Key="FavouriteStop">
            <Grid d:DataContext="{d:DesignInstance viewModel:FavouriteStop}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Grid.ColumnSpan="10"
                           FontSize="{ThemeResource TextStyleLargeXFontSize}"
                           Text="{Binding Stop.Name}" />
                <ListView Grid.Row="1"
                          IncrementalLoadingTrigger="Edge"
                          IsDoubleTapEnabled="False"
                          IsEnabled="False"
                          IsHoldingEnabled="False"
                          IsItemClickEnabled="False"
                          IsRightTapEnabled="False"
                          IsTapEnabled="False"
                          ItemTemplate="{StaticResource SlimRoutForStopDataTemplate}"
                          ItemsSource="{Binding CurrentRouts}"
                          ManipulationMode="None"
                          Opacity="100"
                          SelectionMode="None" />
            </Grid>
        </DataTemplate>
        <ExpanderControl:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Converters:IntToVisibleConverter x:Key="IntToVisibleConverter" />
        <templateSelectors:StopsItemSelector x:Key="StopsItemSelector"
                                             FavouriteStop="{StaticResource FavouriteStop}"
                                             SimpleStop="{StaticResource ListStopsDataTemplate}" />
    </UserControl.Resources>

    <Grid x:Name="ShowStopsGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="{Binding IsShowWebResuls, Converter={StaticResource GridBoolHeightConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            <RowDefinition Height="Auto" />


        </Grid.RowDefinitions>


        <universal:MyTextBox x:Name="FindStop"
                             Grid.Row="0"
                             InputScope="Search"
                             IsTextPredictionEnabled="False"
                             Text="{Binding StopNameFilterAsync,
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=PropertyChanged}"
                             Visibility="Visible" />

        <ListView x:Name="StopsList"
                  Grid.Row="1"
                  Grid.ColumnSpan="1"
                  DataContext="{Binding}"
                  FontSize="20"
                  IsSynchronizedWithCurrentItem="False"
                  ItemTemplateSelector="{StaticResource StopsItemSelector}"
                  ItemsSource="{Binding FilteredStopsStore,
                                        Mode=OneWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding FilteredSelectedStop,
                                         Mode=TwoWay,
                                         UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <AppBarToggleButton x:Name="appBarToggleButton"
                            Grid.Row="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Click="ToggleFavourite"
                            Content="FavouriteStop"
                            Icon="Favorite"
                            IsChecked="{Binding IsShowFavouriteStops,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                            IsCompact="True"
                            Visibility="{Binding FavouriteStopsCount,
                                                 Converter={StaticResource IntToVisibleConverter}}" />
        <Grid Grid.Row="2"
              Background="{ThemeResource BackGroundSolidColorBrushLight}"
              Visibility="{Binding IsShowWebResuls,
                                   Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="1" Text="{Binding StreetName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Grid.Row="0">
                <TextBlock.Text>
                    Возможные остановки:
                </TextBlock.Text>
            </TextBlock>
            <ListView x:Name="WebStopsList"
                      Grid.Row="1"
                      Grid.ColumnSpan="2"
                      DataContext="{Binding}"
                      FontSize="20"
                      IsSynchronizedWithCurrentItem="False"
                      ItemTemplate="{StaticResource ListStopsDataTemplate}"
                      ItemsSource="{Binding WebResults,
                                            Mode=OneWay,
                                            UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding FilteredSelectedStop,
                                             Mode=TwoWay,
                                             UpdateSourceTrigger=PropertyChanged}">


                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>
        <AppBar x:Name="appBar"
                Grid.Row="3"
                DataContext="{Binding}"
                IsOpen="False"
                Visibility="{Binding IsShowFavouriteStops,
                                     Mode=TwoWay,
                                     UpdateSourceTrigger=PropertyChanged,
                                     Converter={StaticResource BooleanToNotVisibilityConverter}}">
            <VariableSizedWrapGrid Orientation="Horizontal">
                <CheckBox Click="ToggleCheckBoxBus"
                          Content="Автобус"
                          IsChecked="{Binding Bus,
                                              Mode=TwoWay,
                                              UpdateSourceTrigger=PropertyChanged}"
                          IsDoubleTapEnabled="False"
                          IsHoldingEnabled="False" />
                <CheckBox Click="ToggleCheckBoxTrol"
                          Content="Тролейбус"
                          IsChecked="{Binding Trol,
                                              Mode=TwoWay,
                                              UpdateSourceTrigger=PropertyChanged}" />
                <CheckBox Click="ButtonBase_OnClick"
                          Content="Трамвай"
                          IsChecked="{Binding Tram,
                                              Mode=TwoWay,
                                              UpdateSourceTrigger=PropertyChanged}" />
                <CheckBox Click="ToggleCheckBoxMetro"
                          Content="Метро"
                          IsChecked="{Binding Metro,
                                              Mode=TwoWay,
                                              UpdateSourceTrigger=PropertyChanged}" />
                <!--<CheckBox Content="Favourite" IsChecked="{Binding IsShowFavouriteStops, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
								<CheckBox Content="Favourite" IsChecked="{Binding IsShowFavouriteStops, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->


                <VariableSizedWrapGrid DataContext="{Binding SettingsModelView}"
                                       VariableSizedWrapGrid.ColumnSpan="10"
                                       Visibility="Collapsed">
                    <interactivity:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{Binding Develop}" Value="true">
                            <core:ChangePropertyAction PropertyName="Visibility" />
                        </core:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <TextBlock Text="Develop settings: " VariableSizedWrapGrid.ColumnSpan="1" />
                    <CheckBox Content="Нечеткий поиск"
                              DataContext="{Binding DataContext,
                                                    ElementName=ShowStop}"
                              IsChecked="{Binding FuzzySearch,
                                                  Mode=TwoWay,
                                                  UpdateSourceTrigger=PropertyChanged}" />
                </VariableSizedWrapGrid>
            </VariableSizedWrapGrid>
        </AppBar>
    </Grid>
</UserControl>
