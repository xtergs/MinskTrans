<Window x:Class="MinskTrans.DesctopClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:MinskTrans.DesctopClient.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mapControl="clr-namespace:MapControl;assembly=MapControl.WPF"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:minskTrans="clr-namespace:MinskTrans.DesctopClient"
        xmlns:modelview="clr-namespace:MinskTrans.DesctopClient.Modelview"
        Title="MainWindow"
        Width="937"
        Height="418"
        Closed="Window_Closed"
        Loaded="Window_Loaded"
        d:DataContext="{d:DesignInstance modelview:MainModelView}"
        mc:Ignorable="d">
    <Window.Resources>
        <converters:TransportToImageConverter x:Key="TransportToImageConverter" />
        <AlternationConverter x:Key="AlternationConverter" />
        <converters:MinsLeftFromTimeSpanConverter x:Key="MinsLeftConverter" />
        <minskTrans:MinsToTimeConverter x:Key="MinsToTimeConverter" />
        <minskTrans:ListIntToStrConverter x:Key="listConverter" />
        <CollectionViewSource x:Key="shedulerModelViewViewSource" d:DesignSource="{d:DesignInstance {x:Type modelview:BaseModelView}, CreateList=True}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="RouteNum" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="shedulerModelViewRoutsViewSource" Source="{Binding Routs, Source={StaticResource shedulerModelViewViewSource}}" />
        <CollectionViewSource x:Key="shedulerModelViewRoutsStopsViewSource" Source="{Binding Stops, Source={StaticResource shedulerModelViewRoutsViewSource}}" />
        <CollectionViewSource x:Key="shedulerModelViewStopsViewSource" Source="{Binding Stops, Source={StaticResource shedulerModelViewViewSource}}" />
        <CollectionViewSource x:Key="shedulerModelViewTimesViewSource" Source="{Binding Times, Source={StaticResource shedulerModelViewViewSource}}" />
        <CollectionViewSource x:Key="shedulerModelViewTimesTimesDictionaryViewSource" Source="{Binding TimesDictionary, Source={StaticResource shedulerModelViewTimesViewSource}}" />
        <CollectionViewSource x:Key="shedulerModelViewRoutViewSource" Source="{Binding Rout, Source={StaticResource shedulerModelViewViewSource}}" />
        <CollectionViewSource x:Key="shedulerModelViewRoutStopsViewSource" Source="{Binding Stops, Source={StaticResource shedulerModelViewViewSource}}" />
        <CollectionViewSource x:Key="shedulerModelViewRouteNamesViewSource" Source="{Binding RouteNames, Source={StaticResource shedulerModelViewViewSource}}" />

        <Color x:Key="newColor"
               A="255"
               B="54"
               G="35"
               R="21" />


        <Style x:Key="PushpinStyle1" TargetType="{x:Type mapControl:Pushpin}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="White" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type mapControl:Pushpin}">
                        <Grid x:Name="MainGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Rectangle">
                                <Rectangle.Fill>
                                    <SolidColorBrush x:Name="SolidColorBrush" Color="White" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <Path x:Name="Path"
                                  Grid.Row="1"
                                  Data="M0,-0.5L0,16 16,-0.5">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="SolidColorBrush1" Color="White" />
                                </Path.Fill>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard x:Name="MouseOverAnimation">
                                            <ColorAnimation Duration="0:0:0:1"
                                                            Storyboard.TargetName="SolidColorBrush"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Aqua" />
                                            <ColorAnimation Duration="0:0:0:1"
                                                            Storyboard.TargetName="SolidColorBrush1"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Aqua" />


                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard x:Name="MouseOutAnimation">
                                            <ColorAnimation Duration="0:0:0:1"
                                                            Storyboard.TargetName="SolidColorBrush"
                                                            Storyboard.TargetProperty="Color"
                                                            To="White" />
                                            <ColorAnimation Duration="0:0:0:1"
                                                            Storyboard.TargetName="SolidColorBrush1"
                                                            Storyboard.TargetProperty="Color"
                                                            To="White" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PushpinStyleSelected" TargetType="{x:Type mapControl:Pushpin}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Red" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type mapControl:Pushpin}">
                        <Grid x:Name="MainGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Rectangle">
                                <Rectangle.Fill>
                                    <SolidColorBrush x:Name="SolidColorBrush" Color="Red" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <Path x:Name="Path"
                                  Grid.Row="1"
                                  Data="M0,-0.5L0,16 16,-0.5">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="SolidColorBrush1" Color="Red" />
                                </Path.Fill>
                            </Path>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PushpinStyleMarket" TargetType="{x:Type mapControl:Pushpin}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Green" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type mapControl:Pushpin}">
                        <Grid x:Name="MainGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Rectangle">
                                <Rectangle.Fill>
                                    <SolidColorBrush x:Name="SolidColorBrush" Color="Red" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <Path x:Name="Path"
                                  Grid.Row="1"
                                  Data="M0,-0.5L0,16 16,-0.5">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="SolidColorBrush1" Color="Red" />
                                </Path.Fill>
                            </Path>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="DataTemplate1">
            <Grid x:Name="Grid">
                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />


                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />

                </Grid.RowDefinitions>
                <Image Grid.RowSpan="3"
                       Height="{Binding ActualHeight,
                                        ElementName=StackPanel}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       Source="{Binding Rout.Transport,
                                        Converter={StaticResource TransportToImageConverter}}"
                       Stretch="Uniform" />
                <StackPanel Grid.Column="1" HorizontalAlignment="Left">
                    <StackPanel x:Name="StackPanel">
                        <TextBlock Grid.Column="1"
                                   FontSize="25"
                                   Text="{Binding Rout.RouteNum}" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   Text="{Binding Rout.StartStop.Name}" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="1"
                                   FontSize="14"
                                   Text="{Binding Rout.DestinationStop.Name}" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="3" HorizontalAlignment="Right">
                    <TextBlock Grid.Column="2"
                               HorizontalAlignment="Right"
                               FontSize="25"
                               Text="{Binding Time
                                              }" />
                    <TextBlock Grid.Row="1"
                               Grid.Column="2"
                               HorizontalAlignment="Right"
                               FontSize="14"
                               Text="{Binding Time,
                                              Converter={StaticResource MinsLeftConverter}}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TabControl x:Name="tabControl" DockPanel.Dock="Top">
            <TabItem DataContext="{Binding RoutesModelview}" Header="Route">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />


                    </Grid.RowDefinitions>
                    <WrapPanel>
                        <RadioButton x:Name="BusButton"
                                     Margin="5,0"
                                     Command="{Binding ShowBusCommand}"
                                     Content="Bus"
                                     GroupName="Type"
                                     IsChecked="True" />
                        <RadioButton x:Name="TrolButton"
                                     Margin="5,0"
                                     Command="{Binding ShowTrolCommand}"
                                     Content="Trol"
                                     GroupName="Type" />
                        <RadioButton x:Name="TramButton"
                                     Margin="5,0"
                                     Command="{Binding ShowTramCommand}"
                                     Content="Tram"
                                     GroupName="Type" />


                        <CheckBox Margin="5,0"
                                  Content="Actual"
                                  IsChecked="{Binding Settings.CurrentTimeRouts,
                                                      Mode=TwoWay,
                                                      UpdateSourceTrigger=PropertyChanged}"
                                  Visibility="Visible" />

                    </WrapPanel>
                    <DockPanel Grid.Row="1">
                        <DockPanel>
                            <DockPanel DockPanel.Dock="Top">
                                <TextBlock Margin="0,0,5,0" Text="{Binding TypeTransport}" />
                                <TextBox x:Name="routeFilterTextBox"
                                         Width="83"
                                         Height="23"
                                         Margin="0"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Top"
                                         DockPanel.Dock="Top"
                                         Text="{Binding RoutNum,
                                                        Mode=TwoWay,
                                                        UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="routeFilterTextBox_TextChanged"
                                         TextWrapping="Wrap" />
                            </DockPanel>

                            <ListView x:Name="routeNumsListView"
                                      Margin="0"
                                      ItemsSource="{Binding RouteNums,
                                                            UpdateSourceTrigger=PropertyChanged}"
                                      RenderTransformOrigin="0.5,0.5"
                                      SelectedIndex="0"
                                      SelectedValue="{Binding RouteNumSelectedValue,
                                                              Mode=TwoWay,
                                                              UpdateSourceTrigger=PropertyChanged}"
                                      SelectionChanged="routeNumsListView_SelectionChanged">

                                <ListView.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="{x:Type GroupItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <GroupBox Margin="10" Header="{Binding Key}">
                                                                <GroupBox.Content>
                                                                    <ContentPresenter />
                                                                </GroupBox.Content>
                                                            </GroupBox>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ListView.GroupStyle>
                            </ListView>
                        </DockPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.3*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="0.7*" />
                            </Grid.RowDefinitions>
                            <ListView x:Name="routeNamesListView"
                                      MinWidth="250"
                                      MinHeight="100"
                                      Margin="0"
                                      DockPanel.Dock="Top"
                                      ItemsSource="{Binding RouteNames}"
                                      SelectedIndex="0"
                                      SelectedValue="{Binding RouteSelectedValue,
                                                              Mode=TwoWay,
                                                              UpdateSourceTrigger=PropertyChanged}"
                                      SelectionChanged="routeNamesListView_SelectionChanged">
                                <ListView.View>
                                    <GridView>
                                        <GridView.Columns>
                                            <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding RouteName}" />
                                            <GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Weekdays}" />
                                        </GridView.Columns>
                                    </GridView>
                                </ListView.View>
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding ShowRouteMap}" Header="Show Route on map" />
                                        <MenuItem Command="{Binding Context.AddFavouriteRoutCommand}"
                                                  CommandParameter="{Binding RouteSelectedValue}"
                                                  Header="Add to favourite" />
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                            <GridSplitter Grid.Row="1"
                                          Height="5"
                                          HorizontalAlignment="Stretch" />
                            <ListView x:Name="stopsListView"
                                      Grid.Row="2"
                                      Margin="0"
                                      DisplayMemberPath="Name"
                                      DockPanel.Dock="Bottom"
                                      ItemsSource="{Binding StopsObservableCollection}"
                                      SelectedIndex="{Binding StopSelectedIndex,
                                                              Mode=TwoWay,
                                                              UpdateSourceTrigger=PropertyChanged}">
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding ShowStopMap}" Header="Show Stop on map" />
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                        </Grid>
                        <DockPanel>
                            <TextBox DockPanel.Dock="Top" Text="{Binding StopSelectedValue.Name, UpdateSourceTrigger=PropertyChanged}" />
                            <ListView Margin="0"
                                      DockPanel.Dock="Left"
                                      ItemsSource="{Binding TimesObservableCollection,
                                                            UpdateSourceTrigger=PropertyChanged}">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="{Binding DaysStr}" />
                                            <minskTrans:ScheduleView Grid.Row="1"
                                                                     Width="Auto"
                                                                     Height="Auto"
                                                                     Margin="0,0,0,0"
                                                                     HorizontalAlignment="Stretch"
                                                                     VerticalAlignment="Stretch"
                                                                     DataContext="{Binding}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </DockPanel>
                        <DockPanel>
                            <TextBox DockPanel.Dock="Top" Text="Favourite" />
                            <ListView DockPanel.Dock="Right"
                                      ItemsSource="{Binding Context.FavouriteRouts}"
                                      SelectedValue="{Binding RouteSelectedValue,
                                                              Mode=TwoWay,
                                                              UpdateSourceTrigger=PropertyChanged}">
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding Context.RemoveFavouriteRoutCommand}"
                                                  CommandParameter="{Binding RouteSelectedValue}"
                                                  Header="Remove from favourite" />
                                        <MenuItem Command="{Binding ShowRouteMap}"
                                                  CommandParameter="{Binding RouteSelectedValue}"
                                                  Header="Show on map" />
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                        </DockPanel>
                    </DockPanel>
                    <WrapPanel Grid.Row="2">
                        <Button Margin="5,0"
                                Command="{Binding ShowStopMap}"
                                Content="Show stop on map" />
                        <Button Margin="5,0"
                                Command="{Binding ShowRouteMap}"
                                Content="Show route on map" />
                        <Button Margin="5,0"
                                Command="{Binding AddFavouriteRoutCommand}"
                                CommandParameter="{Binding RouteSelectedValue}"
                                Content="Add to favourite" />
                        <Button Margin="5,0"
                                Command="{Binding RemoveFavouriteRoutCommand}"
                                CommandParameter="{Binding RouteSelectedValue}"
                                Content="Remove from favourite" />
                    </WrapPanel>

                </Grid>
            </TabItem>
            <TabItem x:Name="stopTabItem"
                     DataContext="{Binding StopMovelView}"
                     Header="Stops">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="0.5*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <DockPanel>
                        <TextBox Margin="0"
                                 VerticalAlignment="Top"
                                 DockPanel.Dock="Top"
                                 Text="{Binding StopNameFilter,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="Wrap" />
                        <CheckBox Content="Use fuzzy search"
                                  DockPanel.Dock="Top"
                                  IsChecked="{Binding FuzzySearch,
                                                      UpdateSourceTrigger=PropertyChanged}" />
                        <ListView x:Name="ListView"
                                  Margin="0"
                                  DisplayMemberPath="Name"
                                  ItemsSource="{Binding FilteredStops}"
                                  SelectedIndex="0"
                                  SelectedValue="{Binding FilteredSelectedStop,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}">
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding ShowStopMap}" Header="Show Stop" />
                                    <MenuItem Command="{Binding Context.AddFavouriteSopCommand}"
                                              CommandParameter="{Binding FilteredSelectedStop}"
                                              Header="Add to favourite" />
                                </ContextMenu>
                            </ListView.ContextMenu>
                        </ListView>
                    </DockPanel>
                    <DockPanel Grid.Column="1">
                        <TextBlock DockPanel.Dock="Top" Text="{Binding FilteredSelectedStop.Name, UpdateSourceTrigger=PropertyChanged}" />
                        <Grid VerticalAlignment="Bottom" DockPanel.Dock="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="0,0,5,0" Text="Destination:" />
                            <TextBox Grid.Column="1" Text="{Binding DestinationStop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        <ListView Grid.Column="1"
                                  DockPanel.Dock="Bottom"
                                  ItemTemplate="{StaticResource DataTemplate1}"
                                  ItemsSource="{Binding TimeSchedule,
                                                        UpdateSourceTrigger=PropertyChanged}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem HorizontalContentAlignment="Stretch" Header="Time in past">
                                        <MenuItem Command="{Binding SetTimeInPast}"
                                                  CommandParameter="10"
                                                  Header="10 min" />
                                        <MenuItem Command="{Binding SetTimeInPast}"
                                                  CommandParameter="20"
                                                  Header="20 min" />
                                        <MenuItem Command="{Binding SetTimeInPast}"
                                                  CommandParameter="30"
                                                  Header="30 min" />
                                        <MenuItem Command="{Binding SetTimeInPast}"
                                                  CommandParameter="40"
                                                  Header="40 min" />

                                    </MenuItem>
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <!--<DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Key.RouteNum}" />
                                <DataGridTextColumn Binding="{Binding Key.RouteName}" />
                                <DataGridTextColumn Binding="{Binding Key.Transport}" />
                                <DataGridTextColumn
                                    Binding="{Binding Value, ConverterParameter=Value, Converter={StaticResource MinsToTimeConverter}, Mode=OneWay}" />
                                <DataGridTextColumn
                                    Binding="{Binding Value, ConverterParameter=Value, Converter={StaticResource MinsLeftConverter}, Mode=OneWay}" />
                            </DataGrid.Columns>-->
                        </ListView>

                    </DockPanel>
                    <DockPanel Grid.Column="2">
                        <TextBox DockPanel.Dock="Top" Text="Favourite" />
                        <ListView ItemsSource="{Binding Context.FavouriteStops}" SelectedValue="{Binding FilteredSelectedStop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding RemoveFavouriteSopCommand}"
                                              CommandParameter="{Binding FilteredSelectedStop}"
                                              Header="Remove from favourite" />
                                    <MenuItem Command="{Binding ShowStopMap}"
                                              CommandParameter="{Binding FilteredSelectedStop}"
                                              Header="Show on map" />
                                </ContextMenu>
                            </ListView.ContextMenu>
                        </ListView>
                    </DockPanel>
                    <DockPanel Grid.Column="3">
                        <DockPanel DockPanel.Dock="Top">
                            <CheckBox Margin="0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Content="AutoNowTime"
                                      DockPanel.Dock="Top"
                                      IsChecked="{Binding AutoNowTime,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}"
                                      RenderTransformOrigin="0.521,0.467" />
                            <DockPanel DockPanel.Dock="Top">
                                <TextBlock DockPanel.Dock="Top" Text="Start time:" />
                                <TextBox Width="36"
                                         Height="23"
                                         Margin="0"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Top"
                                         Text="{Binding NowTimeHour,
                                                        Mode=TwoWay,
                                                        UpdateSourceTrigger=PropertyChanged}"
                                         TextWrapping="Wrap" />
                                <TextBlock Text=":" />
                                <TextBox Width="43"
                                         Height="23"
                                         Margin="0"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Top"
                                         Text="{Binding NowTimeMin,
                                                        Mode=TwoWay,
                                                        UpdateSourceTrigger=PropertyChanged}"
                                         TextWrapping="Wrap" />
                            </DockPanel>
                            <Slider AutoToolTipPlacement="TopLeft"
                                    DockPanel.Dock="Top"
                                    Maximum="59"
                                    TickFrequency="5"
                                    TickPlacement="BottomRight"
                                    ToolTip="Hours"
                                    Value="{Binding NowTimeMin,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}" />
                            <Slider DockPanel.Dock="Top"
                                    Maximum="24"
                                    TickPlacement="BottomRight"
                                    ToolTip="Mins"
                                    Value="{Binding NowTimeHour,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock DockPanel.Dock="Top" Text="Time in past:" />
                            <TextBox DockPanel.Dock="Top" Text="{Binding SettingsModelView.TimeInPast, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Slider DockPanel.Dock="Top"
                                    Maximum="100"
                                    Minimum="0"
                                    TickFrequency="10"
                                    Value="{Binding SettingsModelView.TimeInPast,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}" />

                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <CheckBox Margin="0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Content="AutoDay"
                                      DockPanel.Dock="Top"
                                      IsChecked="{Binding AutoDay,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}"
                                      RenderTransformOrigin="0.521,0.467" />
                            <TextBox Width="120"
                                     Height="23"
                                     Margin="0"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top"
                                     DockPanel.Dock="Top"
                                     Text="{Binding CurDay,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}"
                                     TextWrapping="Wrap" />
                            <Slider DockPanel.Dock="Bottom"
                                    Maximum="7"
                                    Minimum="1"
                                    TickPlacement="BottomRight"
                                    Value="{Binding CurDay,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                        <Button Command="{Binding ShowStopMap}"
                                Content="Show stop on map"
                                DockPanel.Dock="Bottom" />
                        <Button Command="{Binding AddFavouriteSopCommand}"
                                CommandParameter="{Binding FilteredSelectedStop}"
                                Content="Add to favourite"
                                DockPanel.Dock="Bottom" />
                        <Button Command="{Binding RemoveFavouriteSopCommand}"
                                CommandParameter="{Binding FilteredSelectedStop}"
                                Content="Remove from favourite"
                                DockPanel.Dock="Bottom" />
                        <DockPanel DockPanel.Dock="Bottom">
                            <CheckBox Content="bus"
                                      DockPanel.Dock="Top"
                                      IsChecked="{Binding Bus,
                                                          Mode=TwoWay}" />
                            <CheckBox Content="trol"
                                      DockPanel.Dock="Top"
                                      IsChecked="{Binding Trol,
                                                          Mode=TwoWay}" />
                            <CheckBox Content="tram"
                                      DockPanel.Dock="Top"
                                      IsChecked="{Binding Tram,
                                                          Mode=TwoWay}" />
                        </DockPanel>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem DataContext="{Binding GroupStopsModelView}" Header="Group">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Bottom">
                            <Button VerticalAlignment="Bottom"
                                    Click="Button_Click_4"
                                    Content="Add" />
                            <Button VerticalAlignment="Bottom"
                                    Click="Button_Click_5"
                                    Content="Edit" />
                            <Button VerticalAlignment="Bottom"
                                    Click="Button_Click_6"
                                    Content="Delete" />
                        </DockPanel>
                        <ListView DisplayMemberPath="Name"
                                  DockPanel.Dock="Bottom"
                                  ItemsSource="{Binding Context.Groups,
                                                        UpdateSourceTrigger=PropertyChanged}"
                                  SelectedItem="{Binding SelectedGroupStop,
                                                         Mode=TwoWay,
                                                         UpdateSourceTrigger=PropertyChanged}" />
                    </DockPanel>
                    <DataGrid Grid.Column="1"
                              AutoGenerateColumns="False"
                              ItemsSource="{Binding GroupTimeSchedule,
                                                    UpdateSourceTrigger=PropertyChanged}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Key.RouteNum}" />
                            <DataGridTextColumn Binding="{Binding Key.RouteName}" />
                            <DataGridTextColumn Binding="{Binding Key.Transport}" />
                            <DataGridTextColumn Binding="{Binding Value, ConverterParameter=Value, Converter={StaticResource MinsToTimeConverter}, Mode=OneWay}" />
                            <DataGridTextColumn Binding="{Binding Value, ConverterParameter=Value, Converter={StaticResource MinsLeftConverter}, Mode=OneWay}" />
                        </DataGrid.Columns>
                    </DataGrid>

                </Grid>
            </TabItem>
            <TabItem x:Name="mapTabItem"
                     DataContext="{Binding MapModelView}"
                     Header="Map">
                <Grid x:Name="MapGrid" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="0.5*" />
                    </Grid.ColumnDefinitions>
                    <WrapPanel>
                        <CheckBox Content="Bus" Visibility="Collapsed" />
                        <CheckBox Content="Trol" Visibility="Collapsed" />
                        <CheckBox Content="Tram" Visibility="Collapsed" />
                    </WrapPanel>
                    <WrapPanel Grid.Column="1">
                        <TextBlock Text="Start stop: " />
                        <TextBox IsReadOnly="True" Text="{Binding StartStop.Name, UpdateSourceTrigger=PropertyChanged}" />
                        <Button Command="{Binding SwitchStopsCommand}" Content="&lt;-&gt;" />
                        <TextBlock Text="End stop: " />
                        <TextBox IsReadOnly="True" Text="{Binding EndStop.Name, UpdateSourceTrigger=PropertyChanged}" />
                        <Button Click="Button_Click_2" Content="Calculate" />
                    </WrapPanel>
                    <mapControl:Map x:Name="map"
                                    Grid.Row="1"
                                    Margin="0"
                                    ViewportChanged="map_ViewportChanged"
                                    ZoomLevel="7">
                        <mapControl:Map.Center>
                            <mapControl:Location Latitude="27" Longitude="53" />
                        </mapControl:Map.Center>

                    </mapControl:Map>
                    <DockPanel Grid.Row="1" Grid.Column="1">
                        <TextBlock DockPanel.Dock="Top" Text="Result: " />
                        <ListBox x:Name="ResulTextBox"
                                 DockPanel.Dock="Top"
                                 ScrollViewer.CanContentScroll="True" />
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Map1">
                <Grid VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />

                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <TextBox HorizontalAlignment="Left" Text="dkfjdkjf" />
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <TextBox Grid.Column="2"
                                 HorizontalAlignment="Left"
                                 Text="dkfjdkdsaf asdkf jf" />
                    </StackPanel>

                </Grid>
            </TabItem>
            <TabItem Header="Stops" Visibility="Collapsed">
                <DockPanel>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox x:Name="text1"
                                 Width="120"
                                 Height="23"
                                 Margin="60,54,0,0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Top"
                                 Text="ACEABPCQDEABCR"
                                 TextWrapping="Wrap" />
                        <TextBox x:Name="text2"
                                 Width="120"
                                 Height="23"
                                 Margin="60,82,0,0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Top"
                                 Text="ABCDE "
                                 TextWrapping="Wrap" />
                        <Button Width="75"
                                Margin="242,65,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Click="Button_Click"
                                Content="Button" />
                        <DataGrid x:Name="DataGrid"
                                  Width="180"
                                  Height="113"
                                  Margin="370,23,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top" />
                        <TextBox x:Name="result"
                                 Grid.RowSpan="2"
                                 Width="296"
                                 Height="176"
                                 Margin="609,48,0,0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Top"
                                 Text="TextBox"
                                 TextWrapping="Wrap" />
                    </Grid>
                </DockPanel>
            </TabItem>
            <TabItem Header="All Routes" Visibility="Collapsed">
                <DockPanel>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>


                        <DataGrid Grid.Row="0"
                                  DockPanel.Dock="Top"
                                  ItemsSource="{Binding Context.Routs,
                                                        UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </DockPanel>
            </TabItem>
            <TabItem Header="All Times" Visibility="Collapsed">
                <DockPanel>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />

                        </Grid.RowDefinitions>

                        <DataGrid Grid.Row="0"
                                  DockPanel.Dock="Top"
                                  ItemsSource="{Binding Context.Times,
                                                        UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <DataGrid ItemsSource="{Binding TimesDictionary}">
                                        <DataGrid.RowDetailsTemplate>
                                            <DataTemplate>

                                                <ListView ItemsSource="{Binding Value}" />

                                            </DataTemplate>
                                        </DataGrid.RowDetailsTemplate>
                                    </DataGrid>
                                </DataTemplate>
                            </DataGrid.RowDetailsTemplate>
                        </DataGrid>
                    </Grid>
                </DockPanel>
            </TabItem>
            <TabItem Header="All Stops" Visibility="Collapsed">
                <DockPanel>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />

                        </Grid.RowDefinitions>

                        <DataGrid Grid.Row="0"
                                  DockPanel.Dock="Top"
                                  ItemsSource="{Binding Context.Stops,
                                                        UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </DockPanel>
            </TabItem>
            <Button Width="75"
                    Height="100"
                    Click="Button_Click_8"
                    Content="Button" />
            <Button Width="75"
                    Height="100"
                    Click="Button_Click_8"
                    Content="Button" />

        </TabControl>
        <StatusBar Grid.Row="2"
                   VerticalAlignment="Bottom"
                   DockPanel.Dock="Bottom">
            <StatusBarItem x:Name="statusMessages" />
            <StatusBarItem Content="LastUpdated " />
            <StatusBarItem Content="{Binding Context.LastUpdateDataDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Button HorizontalAlignment="Right"
                    Command="{Binding UpdateDataCommand}"
                    Content="Update database" />
            <StatusBarItem x:Name="tickTimer" />
        </StatusBar>
    </Grid>
</Window>